RAMADDA Version 1.1

See the installation docs at:
http://motherlode.ucar.edu/repository/help/installing.html

Look at the ramadda.sh to see how to run RAMADDA stand-alone
When you first start up ramadda you can complete the initialization and configuration at:
http://localhost:8080/repository


Once logged in go to:
http://localhost:8080/repository/admin/settings
to do any further configurations


################# Information for the source distribution  #################
If you have installed the source distribution (i.e., the repository_src.zip, not from SVN)
To build and run ramadda just do:
ant compile 

This compiles the local ramadda source and runs the server on port 8080


################# Running from SVN ################################
If you are doing development here you need to create a couple of jar files.

First, create idv.jar. From trunk/ucar do:
ant idvjar

This makes the idv.jar in trunk/lib

Secondly, create repositorylib.jar. From trunk/org/ramadda/repository do:
ant repositorylib

This unjars lots of jar files that RAMADDA depends on and creates one big jar:
trunk/lib/repositorylib.jar

To build RAMADDA then just do:
have the src dir in your classpath
run:
ant compile
java -Xmx1024m -server   ucar.unidata.repository.server.RepositoryServer


The required classpath is:
${libsdir}/idv.jar:${libsdir}/repositorylib.jar:${libsdir}/repositorytds.jar:${libsdir}/servlet-api.jar
where libsdir is trunk/lib

If you have the ucar directory in your classpath and the requisite jar files you can run RAMADDA stand-alone with:
java -Xmx1024m -server   ucar.unidata.repository.server.RepositoryServer



################# Making repositorytds.jar ################################

repositorytds.jar holds the classes that we use from the thredds.war.  We unjar the war and 
then unjar the jar files contained in it. There are some jars that we skip. To create this
jar file get the latest thredds.war (from ftp://ftp.unidata.ucar.edu/pub/thredds) and copy it
to the trunk/lib directory.  Then from the lib directory execute the tcl script:
cd trunk/lib
tclsh ../org/ramadda/repository/release/makethredds.tcl


################# Making a release ################################

You first need to build the help documentation. See below.

To make the full release do:
ant release

This creates the following files in trunk/lib. The *'ed files are those that get released

repository.jar
*repository.war  - The war to be used by Tomcat
*repository.zip  - The zip file that holds the stand-alone RAMADDA release (which uses Jetty)
*repository_src.jar - Holds the sources needed to build RAMADDA
*repositoryclient.jar  - Used by 3rd party clients (e.g., IDV, JGRASS) 
*repositoryclient.zip  - To run the stand-alone command line client
repositorylib.jar
repositorytds.jar



################# Building the help  ################################

The integrated user documentation is in:
docs/userguide/content

This requires tclsh in your path and  uses the tcl generate.tcl script. 

To build the docs do:
cd docs/userguide/content
source make.sh

This generates the documentation and places it in:
docs/userguide/processed

When the RAMADDA release is built the processed html docs are included in the result.












