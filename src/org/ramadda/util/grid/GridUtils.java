/*
 * Copyright 2010 UNAVCO, 6350 Nautilus Drive, Boulder, CO 80301
 * http://www.unavco.org
 *
 * This library is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2.1 of the License, or (at
 * your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser
 * General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation,
 * Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 * 
 */

package org.ramadda.util.grid;





/**
 * !!!!!!!!NOTE!!!!!!!
 * This file is copied from the UNAVCO SVN tree (I know I shouldn't do this
 * but I couldn't deal with yet another library from somewhere else).
 * SO: DO NOT EDIT THIS FILE HERE OR IF YOU DO MAKE SURE ITS CHECKED INTO 
 * THE UNAVCO TREE
 */
public class GridUtils {



    /**
     * fill array with value
     *
     * @param a array
     * @param value value
     */
    public static void fill(float[][] a, float value) {
        for (int i = 0; i < a.length; i++) {
            for (int j = 0; j < a[i].length; j++) {
                a[i][j] = value;
            }
        }
    }

    /**
     * fill array with value
     *
     * @param a array
     * @param value value
     */
    public static void fill(double[][] a, double value) {
        for (int i = 0; i < a.length; i++) {
            for (int j = 0; j < a[i].length; j++) {
                a[i][j] = value;
            }
        }
    }

    /**
     * fill array with value
     *
     * @param a array
     * @param value value
     */
    public static void fill(int[][] a, int value) {
        for (int i = 0; i < a.length; i++) {
            for (int j = 0; j < a[i].length; j++) {
                a[i][j] = value;
            }
        }
    }



    public static double[][] cloneArray(double[][] a) {
        double[][] b = new double[a.length][a[0].length];
        for (int i = 0; i < a.length; i++) {
            System.arraycopy(a[i], 0, b[i], 0, a[0].length);
        }
        return b;
    }



}
